@import url('https://fonts.googleapis.com/css2?family=Fira+Mono&display=swap');

:root {
  --unit: 50px;
}

body, input, textarea, button {
  font-family: 'Fira Mono', monospace;
}

.app {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  display: grid;
  grid-template-columns: 80vw 1fr;
  grid-template-rows: 100px 1fr;
  margin: 0;
  padding: 0;
}


button {
  margin: none;
  border: none;
  padding: 0 20px;
  border-radius: 99999px;
  position: relative;
  display: inline-block;
}

button:hover::after {
  content: "";
  position: absolute;
  background: rgba(255, 255, 255, 0.2);
  backdrop-filter: invert(100%);
  margin: none;
  border: none;
  padding: 0;
  height: 100%;
  width: 100%;
  left: 0;
  top: 0;
  border-radius: 99999px;
}

ul.navigationBar {
  height: 100px;
  width: 100%;
  position: relative;
  top: 0;
  left: 0;
  grid-column: 1 / -1;
  background: yellow;
  list-style-type: none;
  display: flex;
  justify-content: left;
  align-items: center;
  margin: 0;
  padding: 0;
  z-index: 3;
}

ul.navigationBar > li {
  padding: 0px 20px;
}









ul.navigationBar > li > .dropdown[show="false"] {
  display: none;
  padding: none;
}

ul.navigationBar > li > .dropdown[show="true"] {
  margin: 0;
  padding: 20px;
  position: absolute;
  background: rgba(255,255,255,0.2);
  backdrop-filter: blur(4px);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  justify-items: center;
  align-content: center;
}



ul.navigationBar > li > .dropdown > * {
  margin: 0;
  margin-bottom: 10px;
}


ul.navigationBar > li > .dropdown > ul  {
  padding: 0;
  list-style-type: none;
  position: relative;
  margin: 0;
  margin-bottom: 50px;
}



ul.navigationBar > li > .dropdown > ul  > li > ul {
  margin: 0;
  padding: 0;
  list-style-type: none;
  position: relative;
}

ul.navigationBar > li > .dropdown > ul  > li > ul  > li {
  display: flex;
  justify-content: space-between;
  position: relative;
}
















.game {
  position: relative;
  margin: 0;
  padding: 0;
  /* width: calc(10 * var(--unit) * 1.732); */
  /* height: calc(10 * var(--unit) * 1.732); */
  background: var(--gameColor);
  /* left: 50%; */
  /* top: 50%; */
  /* translate: -50% -50%; */
  display: flex;
  justify-content: center;
  align-items: center;
}

.game > .board {
  position: absolute;
  width: calc(1 * var(--unit));
  height: calc(9 * var(--unit) * 1.732);
  background: var(--boardColor);
  margin: 0;
  padding: 0;
}

.game > .board::before {
  content: "";
  position: absolute;
  height: calc(var(--unit) * 1.732);
  width: 0;
  border: calc(4 * var(--unit) * 1.732) solid transparent;
  border-left: 0 solid transparent;
  border-right: calc(4 * var(--unit)) solid var(--boardColor);
  top: 0;
  right: calc(1 * var(--unit));
}

.game > .board::after {
  content: "";
  position: absolute;
  height: calc(var(--unit) * 1.732);
  width: 0;
  border: calc(4 * var(--unit) * 1.732) solid transparent;
  border-right: 0 solid transparent;
  border-left: calc(4 * var(--unit)) solid var(--boardColor);
  top: 0;
  left: calc(1 * var(--unit));
}

.game > .board > *  {
  position: absolute;
  width: calc(var(--unit)  * 0.5);
  height: calc(var(--unit) * 1.732 * 0.5);
  /* background: red; */
  background: transparent;
/*   border-radius: 50%; */
  right: calc(4.25 * var(--unit));
  top: calc(4.25 * var(--unit) * 1.732);
  translate: calc(var(--row) * var(--unit) * 0.5 + var(--column) * var(--unit) * 0.5) calc(var(--row) * var(--unit) * 0.5 * 1.732 - var(--column) * var(--unit) * 0.5 * 1.732);
  z-index: 2;
}
.game > .board > *::after {
  content: "";
  position: relative;
  display: flex;
  height: calc(var(--unit) * 0.75);
  width: calc(var(--unit) * 0.75);
  left: 50%;
  top: 50%;
  translate: -50% -50%;
  background: var(--color);
  border-radius: 50%;
  cursor: pointer;
}

.game > .board > .inaccessible::after {
  height: calc(var(--unit) * 0.45);
  width: calc(var(--unit) * 0.45);
  backdrop-filter: blur(6px);
  box-shadow: inset -10px 10px 20px 0px rgba(255, 255, 255, 0.5), 4px -4px 5px 0px rgba(255, 255, 255, 0.4),  0px -4px 8px 0px rgba(255, 255, 255, 0);
}

.game > .board > *:not(.inaccessible)::after {
  backdrop-filter: blur(6px);
  box-shadow: 10px 10px 20px 0px rgba(255, 255, 255, 0.5), inset -4px -4px 5px 0px rgba(255, 255, 255, 0.6), inset 0px 4px 8px 0px rgb(255, 255, 255);
}

.game > .board > *[isSelected="true"]::after
 {
  border: 5px solid white;
} 









.timer {
  position: relative;
  /* background: lightcyan; */
  margin: 0;
  padding: 20%;
  display: flex;
  justify-content: flex-start;
  align-items: flex-end;
  align-content: center;
  flex-direction: column;
}


.timer > .farTimer, .timer > .nearTimer {
  font-size: xx-large;
  padding: 0;
  margin: 0;
  display: flex;
  justify-content: left;
  align-items: center;
}

.timer > .farTimer > .indicator, .timer > .nearTimer > .indicator{
  height: 20px;
  width: 20px;
  border-radius: 50%;
  padding: 0;
  margin: 0 15px;
  backdrop-filter: blur(6px);
  box-shadow: inset -10px 10px 20px 0px rgba(255, 255, 255, 0.5), 4px -4px 5px 0px rgba(255, 255, 255, 0.4),  0px -4px 8px 0px rgba(255, 255, 255, 0);

}

.timer > .farTimer > .indicator[state="on"], .timer > .nearTimer > .indicator[state="on"] {
  background: lime;
}

.timer > .farTimer > .indicator[state="off"], .timer > .nearTimer > .indicator[state="off"] {
  background: red;
}


.timer > .farProfile, .timer > .nearProfile {
  display: flex;
  align-items: center;
}

.timer > .farProfile {
  margin-bottom: 50px;
}

.timer > .farProfile > *, .timer > .nearProfile > * {
  margin: 0;
  padding: 0;
  margin-right: 15px;
}



